import tkinter as tk
from tkinter import *
import sqlite3
import tkinter.ttk as ttk
from tkinter.ttk import*
import time
from tkcalendar import Calendar, DateEntry
import datetime



resultList = ["-", "-", "-", "-"]
search_name = ["-"]

def print_result():
    print(resultList)


def date_selection():
    def print_sel():
        selected_date = (cal.selection_get())
        print(selected_date)
        write("Ημερομηνία Παράδοσης: " + str(selected_date))
        resultList[3] = selected_date
    top = tk.Toplevel(mainWindow)

    cal = Calendar(top,
                   font="Arial 14", selectmode='day',
                   cursor="hand1", year=2020, month=2, day=5)
    cal.pack(fill="both", expand=True)
    ttk.Button(top, text="ok", command=print_sel).pack()


canvas_width = 400
canvas_height =400



mainWindow = tk.Tk()
s = ttk.Style(mainWindow)
s.theme_use('vista')

mainWindow.configure(bg='#eae3e1')

mainWindow.title("Dani Boi")
mainWindow.geometry('700x400+75+100')
# mainWindow.columnconfigure(0, weight=2)
# mainWindow.columnconfigure(1, weight=2)
# mainWindow.columnconfigure(2, weight=2)
# mainWindow.columnconfigure(3, weight=1)

# mainWindow.rowconfigure(0, weight=1)
# mainWindow.rowconfigure(1, weight=5)
# mainWindow.rowconfigure(2, weight=5)
# mainWindow.rowconfigure(3, weight=1)




button_save_results = tk.Button(mainWindow, text="Παράδοση", font=40, bg='#F3AF25', command=date_selection)
button_save_results.grid(row=5, column=1)


text_box = tk.Text(mainWindow, state=tk.DISABLED)
text_box.place(relx=0.4, rely=0, relwidth=0.6, relheight=1)




def write(string):
    text_box.config(state=tk.NORMAL)
    text_box.insert("end", string + "\n")
    text_box.see("end")
    text_box.config(state=tk.DISABLED)


def clear_entry(event, entry):
    entry.delete(0, END)

def name():
    entry_name = entryText_name.get()
    write('Όνομα: ' + entry_name + '\n')
    print(entry_name)
    resultList[0] = entry_name
    return entry_name

def phone():
    entry_phone = entryText_phone.get()
    write('Τηλέφωνο: ' + entry_phone + '\n')
    print(entry_phone)
    resultList[1] = entry_phone
    return entry_phone

def search():
    entry_search = entryText_search.get()
    write("Όρος αναζήτησης: " + entry_search + '\n')
    print(entry_search)
    search_name[0] = entry_search
    return entry_search

def save():
    write("Τα στοιχεία του πελάτη αποθηκεύτηκαν.")


name_label = tk.Label(mainWindow, text='Όνομα : ', bg='#eae3e1')
name_label.grid(row=0, column=1, padx=10, pady=10, sticky=W)

name_Frame = tk.Frame(mainWindow, bg='#2e2d2d', bd=10)
name_Frame.grid(row=0, column=2, padx=10, pady=10)

phone_label = tk.Label(mainWindow, text='Τηλέφωνο : ',  bg='#eae3e1')
phone_label.grid(row=1, column=1, padx=10, pady=10, sticky=W)

phone_Frame = tk.Frame(mainWindow, bg='#2e2d2d', bd=10)
phone_Frame.grid(row=1, column=2, padx=10, pady=10)

service_label = tk.Label(mainWindow, text='Υπηρεσία: ', bg='#eae3e1')
service_label.grid(row=2, column=1, padx=10, pady=10, sticky=W)

clothes_label = tk.Label(mainWindow, text='Είδη ρούχων: ', bg='#eae3e1')
clothes_label.grid(row=3, column=1, padx=10, pady=10, sticky=W)

search_label = tk.Label(mainWindow, text='Αναζήτηση: ', bg='#eae3e1')
search_label.grid(row=6, column=1, padx=10, pady=10, sticky=W)

search_Frame = tk.Frame(mainWindow, bg='#2e2d2d', bd=10)
search_Frame.grid(row=6, column=2, padx=10, pady=10)


entryText_name = tk.StringVar()
entry_name = tk.Entry(name_Frame, textvariable=entryText_name)
entry_name.grid(row=0, column=2)
entry_name.bind("<Button-1>", lambda event: clear_entry(event, entry_name))
entry_name.bind('<Return>', lambda _: name())

entryText_phone = tk.StringVar()
entry_phone = tk.Entry(phone_Frame, textvariable=entryText_phone)
entry_phone.grid(row=1, column=2)
entry_phone.bind("<Button-1>", lambda event: clear_entry(event, entry_phone))
entry_phone.bind('<Return>', lambda _: phone())

entryText_search = tk.StringVar()
entry_search = tk.Entry(search_Frame, textvariable=entryText_search)
entry_search.grid(row=6, column=2)
entry_search.bind("<Button-1>", lambda event: clear_entry(event, entry_search))
entry_search.bind('<Return>', lambda _: search())


def on_select(event=None):
    print('----------------------------')

    if event:  # <-- this works only with bind because `command=` doesn't send event
        print("event.widget:", event.widget.get())
        # write("event.widget:", event.widget.get())

        resultList[2] = event.widget.get()
        write('Υπηρεσία: ' + resultList[2] + '\n')

    for i, x in enumerate(all_comboboxes):
        print("all_comboboxes[%d]: %s" % (i, x.get()))
        # write("all_comboboxes[%d]: %s" % (i, x.get()))
        resultList[2] = event.widget.get()
        # print(resultList[6])
        write('Υπηρεσία: ' + resultList[2] + '\n')


all_comboboxes = []

cb = ttk.Combobox(mainWindow, values=("Σιδέρωμα", "Πλύσιμο"))
cb.set("")
cb.grid(row=3, column=2, padx=10, pady=10)
cb.bind('<<ComboboxSelected>>', on_select)


def on_select(event=None):
    print('----------------------------')

    if event:  # <-- this works only with bind because `command=` doesn't send event
        print("event.widget:", event.widget.get())


        resultList[3] = event.widget.get()
        write('Είδος Ρούχου: ' + resultList[3] + '\n')

    for i, x in enumerate(all_comboboxes):
        print("all_comboboxes[%d]: %s" % (i, x.get()))
        resultList[3] = event.widget.get()
        write('Υπηρεσία: ' + resultList[3] + '\n')


all_comboboxes2 = []

cb = ttk.Combobox(mainWindow, values=("Ρούχο 1", "Ρούχο 2"))
cb.set("")
cb.grid(row=2, column=2, padx=10, pady=10)
cb.bind('<<ComboboxSelected>>', on_select)


all_comboboxes2.append(cb)

def search_result():
    db = sqlite3.connect("customers.sqlite")
    cursor = db.cursor()
    cursor.execute("SELECT * FROM customers WHERE name =? ", (search_name[0], ))
    for name, phone, email in cursor:
        write(name)
        write(str(phone))
        write(email)
        print(name)
        print(phone)
        print(email)
    db.commit()
    db.close()



button_save_results = tk.Button(mainWindow, text="Save", font=40, bg='#f7512d', command=search_result)
button_save_results.place(relx=0, rely=0.9, relwidth=0.15, relheight=0.1)

mainWindow.mainloop()

db = sqlite3.connect("customers.sqlite")

# db.execute("CREATE TABLE IF NOT EXISTS customers( name TEXT PRIMARY KEY NOT NULL, phone INTEGER NOT NULL, email TEXT )")
db.execute("CREATE TABLE IF NOT EXISTS customers( name TEXT, phone INTEGER, email TEXT )")



# db.execute("INSERT INTO contacts(name, phone, email) VALUES('BILL','6932487700','rozakos@staff.eslgaming.com')")
sql = "INSERT INTO customers(name, phone, email) VALUES (?,?,?);"
# db.execute(sql, (name, phone, email))
search_command = ("SELECT * FROM customers WHERE name =? ", (search_name[0], ))


